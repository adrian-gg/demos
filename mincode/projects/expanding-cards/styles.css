* {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
}

:root {
  --w-icon: 4rem;
  --padding: 1rem;
}

html {
  box-sizing: border-box;
  font-size: 1.25vmin;
}

body {
  font-family: sans-serif;
}

input {
  appearance: none;
  visibility: hidden;
  display: none;
}

.container {
  width: 100%;
  height: 100dvh;
  display: flex;
  justify-content: center;
  align-items: center;
}

.cards {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.card {
  width: calc(var(--w-icon) + (var(--padding) * 2));
  height: calc(var(--w-icon) * 7);
  padding: var(--padding);
  border-radius: calc(var(--w-icon) / 2 + var(--padding));
  background-color: black;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  display: flex;
  align-items: flex-end;
  overflow: hidden;
  position: relative;
  transition: width 0.4s, height 0.4s, padding 0.4s, border-radius 0.4s,
    margin 0.4s;
  cursor: pointer;
}

.card::before {
  content: "";
  width: 100%;
  height: 50%;
  background-image: linear-gradient(
    to top,
    black 0%,
    black 10%,
    transparent 100%
  );
  position: absolute;
  left: 0;
  bottom: 0;
  opacity: 0.9;
  transition: height 0.4s;
}

.card-head {
  display: flex;
  gap: 0.8rem;
  position: absolute;
}

.card-icon {
  width: var(--w-icon);
  min-width: var(--w-icon);
  height: var(--w-icon);
  border-radius: var(--w-icon);
  background-color: #fff;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 2rem;
}

.card-data {
  width: 0%;
  opacity: 0;
  color: #fff;
  display: flex;
  flex-direction: column;
  justify-content: center;
  overflow: hidden;
  text-wrap: nowrap;
  transition: opacity 0.2s, width 0.4s;
}

.card-data h2 {
  font-size: calc(var(--w-icon) * 0.4);
}
.card-data p {
  font-size: calc(var(--w-icon) * 0.35);
  opacity: 0.8;
}

input:checked ~ .card {
  width: calc(((var(--w-icon) + (var(--padding) * 2)) * 7));
  height: calc(var(--w-icon) * 7 + 1rem);
  margin: -0.5rem;
  padding: calc(var(--padding) + 0.5rem);
  border-radius: calc(var(--w-icon) / 2 + (var(--padding) + 0.5rem));
  pointer-events: none;
}

input:checked ~ .card .card-data {
  width: 100%;
  opacity: 1;
}

/*query for vertical screem*/
@media (max-aspect-ratio: 9/16) {
  .cards {
    flex-direction: column;
  }

  .card {
    height: calc(var(--w-icon) + (var(--padding) * 2));
    width: calc(var(--w-icon) * 7);
  }

  .card::before {
    height: 100%;
  }

  input:checked ~ .card {
    height: calc(((var(--w-icon) + (var(--padding) * 2)) * 7));
    width: calc(var(--w-icon) * 7 + 1rem);
  }

  input:checked ~ .card::before {
    height: 50%;
  }

  .card .card-data {
    width: 100%;
    opacity: 1;
  }
}

@media (max-aspect-ratio: 9/16) {
  html {
    font-size: 1vmax;
  }
}
